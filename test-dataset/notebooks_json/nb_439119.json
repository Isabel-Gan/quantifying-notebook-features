{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "import requests\n",
    "import time\n",
    "import os\n",
    "import schedule"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "urls = []\n",
    "\n",
    "with open('fakeNewsSites.txt') as infile:\n",
    "    for line in infile:\n",
    "        url = ('http://' + line).replace('\\n','')\n",
    "        urls.append(url)\n",
    "\n",
    "def extract_html():\n",
    "    print('Extracting...')\n",
    "    for url in urls:\n",
    "        r = requests.get(url)\n",
    "        source = url.replace('http://','').replace('.com','').replace('.org', '').replace('.us', '').replace('.me', '').replace('.net', '')\n",
    "        filename = '/mnt/c/Users/Brennan/Dropbox/MIDS/w210-capstone/data/notCredible/{0}/{1}.html'.format(source, date)\n",
    "        os.makedirs(os.path.dirname(filename), exist_ok=True)\n",
    "        \n",
    "        with open(filename, 'w') as f:\n",
    "            f.write(r.text)\n",
    "    print('Finished')\n",
    "    return None"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "schedule.every().day.at(\"21:00\").do(extract_html)\n",
    "while True:\n",
    "    date = time.strftime(\"%m-%d\")\n",
    "    schedule.run_pending()\n",
    "    time.sleep(60)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "## Read html back in\n",
    "# with open(\"\") as f:\n",
    "#     soup = BeautifulSoup(f, 'lxml')"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.5.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
